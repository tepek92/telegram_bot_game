// –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
// –ü–æ–¥–∫–ª—é—á–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

require('dotenv').config();
const { Telegraf, Markup, session } = require('telegraf');
const move = require('./functions/movesAndPlay');
const getRandomInRange = require('./functions/randomValue');
const getPlayMenuKeyboard = require('./keyboard/playMenuKeyboard');
const getStartMenuKeyboard = require('./keyboard/startMenuKeyboard');
const roundResult = require('./functions/roundResult');
const gameResult = require('./functions/gameResult');

const bot = new Telegraf(process.env.BOT_TOKEN);
bot.use(session());
startText = `–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º:
‚Äî –∫–∞–º–µ–Ω—å –∑–∞—Ç—É–ø–ª—è–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã
‚Äî –Ω–æ–∂–Ω–∏—Ü—ã —Ä–∞–∑—Ä–µ–∑–∞—é—Ç –±—É–º–∞–≥—É
‚Äî –±—É–º–∞–≥–∞ –∑–∞–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–∞–º–µ–Ω—å
‚Äî –Ω–∏—á—å—è, –µ—Å–ª–∏ —É –∏–≥—Ä–æ–∫–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∫–∞–∑–∞–Ω –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –∑–Ω–∞–∫

–ò–≥—Ä–∞–µ–º –¥–æ 2—Ö –ø–æ–±–µ–¥ –ø–æ–¥—Ä—è–¥.

/help - –ø–æ–º–æ—â—å
/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞

–î–ª—è —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã –Ω–∞–∂–º–∏ <b>PLAY</b>
–£–¥–∞—á–∏ üòâ`;

bot.start(async (ctx) => {
    await ctx.replyWithHTML(`<b>üëãüèª –ü—Ä–∏–≤–µ—Ç ${ctx.message.from.first_name}!
–≠—Ç–æ –∑–Ω–∞–∫–æ–º–∞—è —Ç–µ–±–µ –∏–≥—Ä–∞: –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞.</b>
`, getStartMenuKeyboard());
    await ctx.replyWithHTML(startText);
});

bot.hears('PLAY', ctx => {
    ctx.reply(`–ö–∞–º–µ–Ω—å
–ù–æ–∂–Ω–∏—Ü—ã
–ë—É–º–∞–≥–∞
–†–∞–∑, –¥–≤–∞, —Ç—Ä–∏!`, getPlayMenuKeyboard());
})

bot.hears('/help', ctx => {
    ctx.replyWithHTML(startText, getStartMenuKeyboard());
})

bot.on('text', async ctx => {
    try {
        let rockScissorsPaper = ['üóø', '‚úåÔ∏è', 'üßª'];
        ctx.session ??= {
            roundResultMessage: '',
            gameResultMessage: '',
            userScore: 0,
            botScore: 0,
            userMove: 0,
            botMove: 0,
            winner: 0,
            exit: 0
        };

        const keyboard = getPlayMenuKeyboard();
        ctx.session.userMove = await ctx.message.text; // –ü–æ–ª—É—á–∞–µ–º —Ö–æ–¥ –∏–≥—Ä–æ–∫–∞
        ctx.session.botMove = await rockScissorsPaper[getRandomInRange(0, 2)]; // –ü–æ–ª—É—á–∞–µ–º —Ö–æ–¥ –±–æ—Ç–∞
        [ctx.session.winner, ctx.session.exit] = move(ctx.session.userMove, ctx.session.botMove); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ö–æ–¥

        if (ctx.session.exit == 0) {
            await ctx.reply(ctx.session.botMove); // –í—ã–≤–æ–¥–∏–º —Ö–æ–¥ –±–æ—Ç–∞

            [ctx.session.roundResultMessage, ctx.session.userScore, ctx.session.botScore]
                = roundResult(ctx.session.winner, ctx.session.exit, ctx.session.userScore, ctx.session.botScore);
            await ctx.replyWithHTML(ctx.session.roundResultMessage); // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ä–∞—É–Ω–¥–∞

            [ctx.session.gameResultMessage, ctx.session.exit]
                = gameResult(ctx.session.userScore, ctx.session.botScore, ctx.session.exit);
            await ctx.replyWithHTML(ctx.session.gameResultMessage); // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä—ã
        }
        if (ctx.session.exit == 1) { // –ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ª–∏–±–æ —Ä–µ—Å—Ç–∞—Ä—Ç
            ctx.session.userScore = 0;
            ctx.session.botScore = 0;
            ctx.reply('–ï—â–µ —Ä–∞–∑–æ–∫?', getStartMenuKeyboard());
        } else if (ctx.session.exit == 2) { // –û—à–∏–±–æ—á–Ω—ã–π –≤–≤–æ–¥
            ctx.reply('–ö–∞–∂–µ—Ç—Å—è —Ç—ã –Ω–∞–∂–∞–ª –Ω–µ —Ç—É–¥–∞, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ ;)', getPlayMenuKeyboard());
        }
        ctx.session.exit = 0;
        ctx.session.winner = 0;
    } catch (e) {
        console.error(e);
    }
});

bot.launch();

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));